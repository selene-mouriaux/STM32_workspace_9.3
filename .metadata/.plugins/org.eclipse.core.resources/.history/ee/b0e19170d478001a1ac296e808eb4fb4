/*
 * fifo.c
 *
 *  Created on: Apr 7, 2020
 *      Author: s_il_vanas
 */

#include<stdlib.h>
#include<stdio.h>
#include "fifo.h"

// définir fn intitialiser

Pile* initialiser() {
int * maPile;
return Pile *maPile = NULL;

}

void empiler(Pile *pile, int nvNombre)
{
	Element *nouveau = malloc(sizeof(*nouveau));
	if (pile == NULL || nouveau == NULL)
	{
		exit(EXIT_FAILURE);
	}
	nouveau->nombre = nvNombre;
	nouveau->suivant = NULL;
	if (pile->premier != NULL) /* La pile n'est pas vide */
	{
		/* On se positionne à la fin de la file */
		Element *elementActuel = pile->premier;
		while (elementActuel->suivant != NULL)
		{
			elementActuel = elementActuel->suivant;
		}
		elementActuel->suivant = nouveau;
	}
	else /* La pile est vide, notre élément est le premier */
	{
		pile->premier = nouveau;
	}
}

int depiler(Pile *pile) {
	if (pile == NULL)
	{
		exit(EXIT_FAILURE);
	}
	int nombreDepile = 0;
	/* On vérifie s'il y a quelque chose à défiler */
	if (pile->premier != NULL)
	{
		Element *elementDepile = pile->premier;
		nombreDepile = elementDepile->nombre;
		pile->premier = elementDepile->suivant;
		free(elementDepile);
	}
	return nombreDepile;
}

void afficherPile(Pile *pile)
{
	if (pile == NULL)
	{
		exit(EXIT_FAILURE);
	}
	Element *actuel = pile->premier;

	while (actuel != NULL)
	{
		printf("%d\n", actuel->nombre);
		actuel = actuel->suivant;
	}

	printf("\n");
}

